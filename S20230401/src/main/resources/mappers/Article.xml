<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java501.S20230401.model.ArticleMapper">

	<!-- 유현규 -->
	<insert id="hgInsertArticle" parameterType="Article">
		INSERT INTO ARTICLE (ART_ID, BRD_ID, ART_TITLE, MEM_ID, ART_REGDATE, ART_CONTENT,
							 ART_TAG1, ART_TAG2, ART_TAG3, ART_TAG4, ART_TAG5, TRD_ID, ART_GOOD,
							 ART_BAD, ART_READ, ART_ISNOTICE, ISDELETE, REPORT_ID)
		VALUES ((SELECT MAX(ART_ID) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), #{brd_id},
				#{art_title, jdbcType=VARCHAR}, #{mem_id}, SYSDATE, #{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}, #{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, NULL,
				0, 0, 0, 0, 0, NULL)
	</insert>
	<insert id="hgInsertAdminArticle" parameterType="Article">
		INSERT INTO ARTICLE (ART_ID, BRD_ID, ART_TITLE, MEM_ID, ART_REGDATE, ART_CONTENT,
							 ART_TAG1, ART_TAG2, ART_TAG3, ART_TAG4, ART_TAG5, TRD_ID, ART_GOOD,
							 ART_BAD, ART_READ, ART_ISNOTICE, ISDELETE, REPORT_ID)
		VALUES ((SELECT MAX(ART_ID) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), #{brd_id},
				#{art_title, jdbcType=VARCHAR}, #{mem_id}, SYSDATE, #{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}, #{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, NULL,
				0, 0, 0, 0, 0, NULL)
		<selectKey keyProperty="art_id" resultType="int" order="AFTER">
			SELECT MAX(ART_ID) ART_ID FROM ARTICLE WHERE BRD_ID = #{brd_id}
		</selectKey>
	</insert>
	<update id="hgCompressedUpdateArticle" parameterType="Article">
		UPDATE ARTICLE SET ART_TITLE = #{art_title}, ART_CONTENT = #{art_content}, ART_TAG1 = #{art_tag1, jdbcType=VARCHAR},
								   ART_TAG2 = #{art_tag2, jdbcType=VARCHAR}, ART_TAG3 = #{art_tag3, jdbcType=VARCHAR},
								   ART_TAG4 = #{art_tag4, jdbcType=VARCHAR}, ART_TAG5 = #{art_tag5, jdbcType=VARCHAR}
		WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</update>
	<update id="hgDeleteArticle" parameterType="Article">
		UPDATE ARTICLE SET ISDELETE = 1 WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</update>
	<update id="hgRestoreArticle" parameterType="Article">
		UPDATE ARTICLE SET ISDELETE = 0 WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</update>
	<select id="hgGetArticleById" parameterType="Article" resultType="Article">
		SELECT A.*, M.MEM_NICKNAME, M.MEM_USERNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT
		FROM ARTICLE A LEFT OUTER JOIN (SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
													  FROM REPLY
													  GROUP BY ART_ID, BRD_ID) R ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID)
							  LEFT OUTER JOIN MEMBER M ON (A.MEM_ID = M.MEM_ID)
		WHERE A.ART_ID = #{art_id} AND A.BRD_ID = #{brd_id}
	</select>
	
		<select id="hgAdminArticleList" parameterType="Article" resultType="Article">
		SELECT  *
		FROM    (SELECT ROWNUM AS RN, J.*
		         FROM   (SELECT *
		                 FROM ( SELECT  *
		                        FROM    ARTICLE A
		                        JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
		                                    FROM    BOARD B JOIN COMM C1
		                                    ON      BRD_ID IN COMM_ID
		                                 )USING(BRD_ID)
		                        JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
		                                    FROM    MEMBER M JOIN COMM C2
		                                    ON      MEM_GENDER IN COMM_ID
		                                 )USING(MEM_ID)
				                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
				                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
				                                        ON      T.TRD_STATUS = C3.COMM_ID
				                                        LEFT OUTER JOIN REGION R
				                                        ON      T.REG_ID = R.REG_ID
				                         )USING(TRD_ID)
		                        LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
		                                                FROM 	REPLY
		                                                WHERE 	ISDELETE = 0
		                                                GROUP BY(ART_ID, BRD_ID)
		                                            )USING(BRD_ID, ART_ID)
		                       )
		                 WHERE      BRD_ID <choose>
		                 						<when test="brd_id == 999">
													BETWEEN #{brd_id} and #{brd_id}+600
												</when>
												<when test="brd_id % 100 != 0">
													= #{brd_id}
												</when>
												<otherwise>
													BETWEEN #{brd_id} and #{brd_id}+99
												</otherwise>
											</choose>
		                 ORDER BY   ART_REGDATE DESC) J)
		WHERE 	RN BETWEEN #{start} and #{end}
	</select>
	<update id="hgIncreaseReadCount" parameterType="Article">
		UPDATE ARTICLE SET ART_READ = ART_READ + 1
		WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</update>
	<update id="hgRecommendArticle" parameterType="Article">
		UPDATE ARTICLE SET ART_GOOD = ART_GOOD + #{art_good},
						   ART_BAD = ART_BAD + #{art_bad}
		WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</update>
	<select id="hgGetCountAllArticle" resultType="int">
		SELECT COUNT(*) FROM ARTICLE
	</select>
	<select id="hgGetArticles" parameterType="Article" resultType="Article">
		SELECT *
		FROM (SELECT ROWNUM RN, A.*
				 FROM (SELECT * FROM ARTICLE ORDER BY ART_REGDATE) A)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 양동균 -->
	<resultMap type="Article" id="dgArticleMap">
		<id 	column="art_id" 		property="art_id"/> <!-- PK	 -->
		<id 	column="brd_id" 		property="brd_id"/>	<!-- PK -->
		<result column="art_title" 		property="art_title"/>  
		<result column="mem_id" 		property="mem_id"/>
		<result column="art_regdate" 	property="art_regdate"/>
		<result column="art_content" 	property="art_content"/>
		<result column="art_tag1" 		property="art_tag1"/>
		<result column="art_tag2" 		property="art_tag2"/>
		<result column="art_tag3" 		property="art_tag3"/>
		<result column="art_tag4" 		property="art_tag4"/>
		<result column="art_tag5" 		property="art_tag5"/>
		<result column="trd_id" 		property="trd_id"/>
		<result column="art_good" 		property="art_good"/>
		<result column="art_bad" 		property="art_bad"/>
		<result column="art_read" 		property="art_read"/>
		<result column="art_isnotice" 	property="art_isnotice"/>
		<result column="isdelete" 		property="isdelete"/>
		<result column="report_id" 		property="report_id"/>
		<result column="gen_name" 		property="gen_name"/>
		<result column="brd_name" 		property="brd_name"/>
		<result column="status_name" 	property="status_name"/>
		<result column="rep_cnt" 		property="rep_cnt"/>
		<collection property="member" 	resultMap="com.java501.S20230401.model.MemberMapper.dgMemberMap"/>
		<collection property="board" 	resultMap="com.java501.S20230401.model.BoardMapper.dgBoardMap"/>
		<collection property="trade" 	resultMap="com.java501.S20230401.model.TradeMapper.dgTradeMap"/>
	</resultMap>
	
	<!-- 전체 카운트 -->
	<select id="dgAllArtCnt" resultType="int" parameterType="Article">
		SELECT 	COUNT(*)
		FROM 	ARTICLE
		WHERE 	BRD_ID 
		<choose>
			<when test="brd_id == 999">
				BETWEEN #{brd_id} and #{brd_id}+600
			</when>
			<when test="brd_id % 100 != 0">
				= #{brd_id}
			</when>
			<otherwise>
				BETWEEN #{brd_id} and #{brd_id}+99
			</otherwise>
		</choose>
		AND		ISDELETE = 0
		<choose>
	       	<when test="search == 'article'">
	       		AND (ART_TITLE || ART_CONTENT) LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'title'">
	       		AND ART_TITLE LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'content'">
	       		AND ART_CONTENT LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'nickname'">
	       		AND MEM_NICKNAME LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'articleTag'">
	       		AND (ART_TAG1||ART_TAG2||ART_TAG3||ART_TAG4||ART_TAG5) LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<otherwise></otherwise>
       </choose>
	</select>

	<!-- 전체 조회 -->
	<select id="dgAllArticleList" resultMap="dgArticleMap" parameterType="Article">
		SELECT  *
		FROM    (SELECT ROWNUM AS RN, J.*
		         FROM   (SELECT *
		                 FROM ( SELECT  *
		                        FROM    ARTICLE A
		                        JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
		                                    FROM    BOARD B JOIN COMM C1
		                                    ON      BRD_ID IN COMM_ID
		                                 )USING(BRD_ID)
		                        JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
		                                    FROM    MEMBER M JOIN COMM C2
		                                    ON      MEM_GENDER IN COMM_ID
		                                 )USING(MEM_ID)
				                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
				                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
				                                        ON      T.TRD_STATUS = C3.COMM_ID
				                                        LEFT OUTER JOIN REGION R
				                                        ON      T.REG_ID = R.REG_ID
				                         )USING(TRD_ID)
		                        LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
		                                                FROM 	REPLY
		                                                WHERE 	ISDELETE = 0
		                                                GROUP BY(ART_ID, BRD_ID)
		                                            )USING(BRD_ID, ART_ID)
                                WHERE 	A.ISDELETE = 0
				                AND     BRD_ID <choose>
			                 						<when test="brd_id == 999">
														BETWEEN #{brd_id} and #{brd_id}+600
													</when>
													<when test="brd_id % 100 != 0">
														= #{brd_id}						
													</when>
													<otherwise>
														BETWEEN #{brd_id} and #{brd_id}+99		
													</otherwise>
												</choose>
		                       )
		                 <choose>
		                 	<when test="search == 'article'">
		                 		WHERE (ART_TITLE || ART_CONTENT) LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'title'">
		                 		WHERE ART_TITLE LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'content'">
		                 		WHERE ART_CONTENT LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'nickname'">
		                 		WHERE MEM_NICKNAME LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'articleTag'">
		                 		WHERE (ART_TAG1||ART_TAG2||ART_TAG3||ART_TAG4||ART_TAG5) LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<otherwise></otherwise>
		                 </choose>
		                 ORDER BY   ART_REGDATE DESC) J)
		WHERE 	RN BETWEEN #{start} and #{end}
	</select>

	<!-- 게시글 조회 -->
	<select id="dgDetailShareArticle" resultMap="dgArticleMap" parameterType="Article">
		SELECT  *
		FROM   (SELECT *
		        FROM    ARTICLE A
                JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
                            FROM    BOARD B JOIN COMM C1
                            ON      BRD_ID IN COMM_ID
                        )USING(BRD_ID)
                JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.MEM_ID, M.MEM_USERNAME, M.MEM_NICKNAME, M.MEM_EMAIL, M.MEM_TEL, M.MEM_REGION1, M.MEM_REGION2, M.MEM_REGDATE, M.MEM_AUTHORITY, M.MEM_IMAGE, M.MEM_LATEST, M.REPORT_ID AS memReport_id
                            FROM    MEMBER M JOIN COMM C2
                            ON      MEM_GENDER IN COMM_ID
                        )USING(MEM_ID)
                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
                                        ON      T.TRD_STATUS = C3.COMM_ID
                                        LEFT OUTER JOIN REGION R
                                        ON      T.REG_ID = R.REG_ID
                         )USING(TRD_ID)
                LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
                                        FROM 	REPLY
                                        WHERE 	ISDELETE = 0
                                        GROUP BY(ART_ID, BRD_ID)
                                    )USING(BRD_ID, ART_ID)
                WHERE 	A.ISDELETE = 0
		        )
		WHERE   ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="dgReadShareArticle" parameterType="Article">
		UPDATE  ARTICLE
		SET     ART_READ = ART_READ+1
		WHERE   ART_ID = #{art_id}
		AND     BRD_ID = #{brd_id}
	</update>

	<!-- 게시글 작성 프로시저 -->
	<insert id="dgWriteShareArticle" parameterType="Article" statementType="CALLABLE">
		{
			call dgWriteShare(
				#{trade.trd_status,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_max,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_enddate,mode=IN, 	jdbcType=DATE},
				#{trade.trd_cost,	mode=IN, 	jdbcType=INTEGER},
				#{trade.reg_id,	    mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_loc,	mode=IN, 	jdbcType=VARCHAR},
				#{trade.trd_gender,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_minage,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_maxage,	mode=IN, 	jdbcType=INTEGER},
				#{brd_id,	        mode=IN, 	jdbcType=INTEGER},
				#{mem_id,	        mode=IN, 	jdbcType=INTEGER},
				#{art_title,	    mode=IN, 	jdbcType=VARCHAR},
				#{art_content,	    mode=IN, 	jdbcType=CLOB},
				#{art_tag1,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag2,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag3,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag4,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag5,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_isnotice,	    mode=IN, 	jdbcType=INTEGER}
			)
		}
	</insert>
	<!-- 글 삭제 -->
	<update id="dgDeleteArticle" parameterType="Article">
		UPDATE 	ARTICLE
		SET		ISDELETE = 1
		WHERE	ART_ID = #{art_id}
		AND		BRD_ID = #{brd_id}
	</update>
	<!-- 글 추천, 비추천 -->
	<update id="dgVoteGood" parameterType="Article">
		UPDATE  ARTICLE
		SET     ART_GOOD = #{art_good}
		WHERE   ART_ID = #{art_id}
		AND     BRD_ID = #{brd_id}
	</update>
	<update id="dgVoteBad" parameterType="Article">
		UPDATE  ARTICLE
		SET     ART_BAD = #{art_bad}
		WHERE   ART_ID = #{art_id}
		AND     BRD_ID = #{brd_id}
	</update>
 	<select id="dgArtGood" parameterType="Article" resultType="int">
		SELECT	ART_GOOD
		FROM	ARTICLE
		WHERE   ART_ID = #{art_id}
		AND     BRD_ID = #{brd_id}
	</select>
	<select id="dgArtBad" parameterType="Article" resultType="int">
		SELECT	ART_BAD
		FROM	ARTICLE
		WHERE   ART_ID = #{art_id}
		AND     BRD_ID = #{brd_id}
	</select>
	<update id="dgUpdateArticle" parameterType="Article">
		UPDATE	ARTICLE
		SET		ART_TITLE 	= #{art_title},
				ART_CONTENT = #{art_content},
				ART_TAG1	= #{art_tag1},
				ART_TAG2	= #{art_tag2},
				ART_TAG3	= #{art_tag3},
				ART_TAG4	= #{art_tag4},
				ART_TAG5	= #{art_tag5},
				ART_ISNOTICE = #{art_isnotice}
		WHERE	ART_ID = #{art_id}
		AND		BRD_ID = #{brd_id}
	</update>
	<!-- 신고 -->
	<update id="dgReportArticle" parameterType="Article">
		UPDATE 	ARTICLE
		SET		REPORT_ID = #{report_id}
		WHERE 	ART_ID = #{art_id}
		AND		BRD_ID = #{brd_id}
	</update>
	
	
	
	
	<!-- 백준 -->
	<select id="bjarticleCnt" parameterType="int" resultType="int">
		SELECT 	COUNT(*)
		FROM 	ARTICLE
		WHERE 	BRD_ID 
		<choose>
			<when test="brd_id == 999">
				BETWEEN #{brd_id} and #{brd_id}+600
			</when>
			<when test="brd_id % 100 != 0">
				= #{brd_id}
			</when>
			<otherwise>
				BETWEEN #{brd_id} and #{brd_id}+99
			</otherwise>
		</choose>
		AND		ISDELETE = 0
		<choose>
	       	<when test="search == 'article'">
	       		AND (ART_TITLE || ART_CONTENT) LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'title'">
	       		AND ART_TITLE LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'content'">
	       		AND ART_CONTENT LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'nickname'">
	       		AND MEM_NICKNAME LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<when test="search == 'articleTag'">
	       		AND (ART_TAG1||ART_TAG2||ART_TAG3||ART_TAG4||ART_TAG5) LIKE '%'|| #{keyWord} ||'%'
	       	</when>
	       	<otherwise></otherwise>
       </choose>
	</select>
	
	<select id="bjarticleIndexAll" parameterType="Article" resultType="Article">
		SELECT  *
		FROM    (SELECT ROWNUM AS RN, J.*
		         FROM   (SELECT *
		                 FROM ( SELECT  *
		                        FROM    ARTICLE A
		                        JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
		                                    FROM    BOARD B JOIN COMM C1
		                                    ON      BRD_ID IN COMM_ID
		                                 )USING(BRD_ID)
		                        JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
		                                    FROM    MEMBER M JOIN COMM C2
		                                    ON      MEM_GENDER IN COMM_ID
		                                 )USING(MEM_ID)
				                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
				                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
				                                        ON      T.TRD_STATUS = C3.COMM_ID
				                                        LEFT OUTER JOIN REGION R
				                                        ON      T.REG_ID = R.REG_ID
				                         )USING(TRD_ID)
		                        LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
		                                                FROM 	REPLY
		                                                WHERE 	ISDELETE = 0
		                                                GROUP BY(ART_ID, BRD_ID)
		                                            )USING(BRD_ID, ART_ID)
                                WHERE 	A.ISDELETE = 0
				                AND     BRD_ID <choose>
			                 						<when test="brd_id == 999">
														BETWEEN #{brd_id} and #{brd_id}+600
													</when>
													<when test="brd_id % 100 != 0">
														= #{brd_id}
													</when>
													<otherwise>
														BETWEEN #{brd_id} and #{brd_id}+99
													</otherwise>
												</choose>
		                       )
		                 <choose>
		                 	<when test="search == 'article'">
		                 		WHERE (ART_TITLE || ART_CONTENT) LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'title'">
		                 		WHERE ART_TITLE LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'content'">
		                 		WHERE ART_CONTENT LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'nickname'">
		                 		WHERE MEM_NICKNAME LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<when test="search == 'articleTag'">
		                 		WHERE (ART_TAG1||ART_TAG2||ART_TAG3||ART_TAG4||ART_TAG5) LIKE '%'|| #{keyWord} ||'%'
		                 	</when>
		                 	<otherwise></otherwise>
		                 </choose>
		                 ORDER BY   ART_REGDATE DESC) J)
		WHERE 	RN BETWEEN #{start} and #{end}
	</select>
		
	

	
	<select id="bjArticleMenu" parameterType="Article" resultType="Article">
		SELECT *
		FROM (
		    SELECT ROWNUM RN, TEMP.*, M.mem_nickname, M.mem_image
		    FROM (
		        SELECT A.*, NVL(R.REP_CNT, 0) AS REP_CNT
		        FROM ARTICLE A
		        LEFT OUTER JOIN (
		            SELECT ART_ID, BRD_ID, COUNT(*) REP_CNT 
		            FROM REPLY 
		            WHERE BRD_ID = #{brd_id}
		            GROUP BY ART_ID, BRD_ID
		        ) R ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID) 
		        WHERE A.BRD_ID = #{brd_id}
		        AND A.isdelete = 0 
		        ORDER BY A.ART_REGDATE DESC
		    ) TEMP
		    INNER JOIN member M ON TEMP.mem_id = M.mem_id
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>

	<select id="bjdetailContent"  parameterType="Article" resultType="Article">
		<!-- SELECT a.*, m.mem_nickname, m.mem_image
			FROM article a
			INNER JOIN member m ON a.mem_id = m.mem_id
		WHERE a.art_id = #{art_id} AND a.brd_id = #{brd_id}	AND a.isdelete = 0 -->
		SELECT  *
		FROM   (SELECT *
		        FROM    ARTICLE A
                JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
                            FROM    BOARD B JOIN COMM C1
                            ON      BRD_ID IN COMM_ID
                        )USING(BRD_ID)
                JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.MEM_ID, M.MEM_USERNAME, M.MEM_NICKNAME, M.MEM_EMAIL, M.MEM_TEL, M.MEM_REGION1, M.MEM_REGION2, M.MEM_REGDATE, M.MEM_AUTHORITY, M.MEM_IMAGE, M.MEM_LATEST, M.REPORT_ID AS memReport_id
                            FROM    MEMBER M JOIN COMM C2
                            ON      MEM_GENDER IN COMM_ID
                        )USING(MEM_ID)
                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
                                        ON      T.TRD_STATUS = C3.COMM_ID
                                        LEFT OUTER JOIN REGION R
                                        ON      T.REG_ID = R.REG_ID
                         )USING(TRD_ID)
                LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
                                        FROM 	REPLY
                                        WHERE 	ISDELETE = 0
                                        GROUP BY(ART_ID, BRD_ID)
                                    )USING(BRD_ID, ART_ID)
                WHERE 	A.ISDELETE = 0
		        )
		WHERE   ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</select>
	
	<update id="bjreadCount" parameterType="Article" >
		UPDATE article
		SET art_read = art_read + 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id} AND isdelete = 0
	</update>
	
	<insert id="bjWriteArticle" parameterType="Article">
    INSERT INTO ARTICLE (
    			ART_ID, 
    			BRD_ID, 
    			ART_TITLE, 
    			MEM_ID, 
    			ART_REGDATE, 
    			ART_CONTENT,
				ART_TAG1, 
				ART_TAG2, 
				ART_TAG3, 
				ART_TAG4, 
				ART_TAG5, 
				TRD_ID, 
				ART_GOOD,
				ART_BAD, 
				ART_READ, 
				ART_ISNOTICE, 
				ISDELETE, 
				REPORT_ID
							)
		VALUES 
				((SELECT NVL(MAX(ART_ID), 0) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), 
				#{brd_id},
				#{art_title, jdbcType=VARCHAR}, 
				#{mem_id}, 
				SYSDATE, 
				#{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, 
				#{art_tag2, jdbcType=VARCHAR}, 
				#{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, 
				#{art_tag5, jdbcType=VARCHAR}, 
				NULL,
				0, 0, 0, 
				<choose>
		            <when test="art_isnotice != null">
		                #{art_isnotice, jdbcType=INTEGER},
		            </when>
	            <otherwise>
	                	0,
	            </otherwise>
	        	</choose>
        		 0, NULL)
	</insert>
	
	<update id="bjUpdate" parameterType="Article">
		UPDATE article
		  SET
		    art_title = #{art_title},
		    art_tag1 = #{art_tag1},
		    art_tag2 = #{art_tag2},
		    art_tag3 = #{art_tag3},
		    art_tag4 = #{art_tag4},
		    art_tag5 = #{art_tag5},
		    art_content = #{art_content}
		WHERE  art_id = #{art_id} AND brd_id = #{brd_id}   
	</update>
	<update id="bjDelete" parameterType="Article">
		UPDATE article
		  SET
		  	isdelete = 1
		WHERE art_id=#{art_id} AND brd_id = #{brd_id}
	</update>
	
	<update id="bjGood" parameterType="Article">
		UPDATE article
			SET
				art_good = art_good+1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id}		
	</update>

	<update id="bjBad" parameterType="Article">
		UPDATE article
			SET
				art_bad = art_bad+1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id}		
	</update>
	
	
	
	
	
	
	
	
	<!-- 임동빈 -->
	<select id="dbArticleTotalCnt" parameterType="Article" resultType="int">
		SELECT Count(*) FROM article a 
		LEFT JOIN member m ON a.mem_id = m.mem_id
			<choose>
				<when test="search == 's_art_title'">
					WHERE a.art_title like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_mem_nickname'">
					WHERE m.mem_nickname like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_art_tag'">
		            WHERE (a.ART_TAG1||a.ART_TAG2||a.ART_TAG3||a.ART_TAG4||a.ART_TAG5) LIKE '%'|| #{keyword} ||'%'
		        </when>
				<otherwise>
					WHERE a.art_title like '%'
				</otherwise>
			</choose>
		AND a.brd_id between #{brd_id} and #{brd_id} + 60
		AND a.isdelete = 0
	</select>

	<select id="dbArticleBoardCnt" parameterType="Article" resultType="int">
		SELECT Count(*) FROM article a 
		LEFT JOIN member m ON a.mem_id = m.mem_id	
			<choose>
				<when test="search == 's_art_title'">
					WHERE a.art_title like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_mem_nickname'">
					WHERE m.mem_nickname like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_art_tag'">
		            WHERE (a.ART_TAG1||a.ART_TAG2||a.ART_TAG3||a.ART_TAG4||a.ART_TAG5) LIKE '%'|| #{keyword} ||'%'
		        </when>
				<otherwise>
					WHERE a.art_title like '%'
				</otherwise>
			</choose>
		AND		a.brd_id=#{brd_id}
		AND 	a.isdelete = 0
	</select>


	<select id="dbArticleListAll" parameterType="Article" resultType="Article">
		SELECT * FROM (
		    SELECT ROWNUM RN, TT.*
		    FROM (
		           SELECT   A.ART_ID
		           		  , A.BRD_ID
		           		  , A.ART_TITLE
		           		  , A.MEM_ID
		           		  , A.ART_REGDATE
		           		  , A.ART_CONTENT
		           		  , A.ART_TAG1
		           		  , A.ART_TAG2
		           		  , A.ART_TAG3
		           		  , A.ART_TAG4
		           		  , A.ART_TAG5
		           		  , A.TRD_ID
		           		  , A.ART_GOOD
		           		  , A.ART_BAD
		           		  , A.ART_READ
		           		  , A.ART_ISNOTICE
		           		  , A.ISDELETE
		           		  , A.REPORT_ID
		           		  , M.MEM_USERNAME
		           		  , M.MEM_PASSWORD
		           		  , M.MEM_NICKNAME
		           		  , M.MEM_EMAIL
		           		  , M.MEM_TEL
		           		  , M.MEM_REGION1
		           		  , M.MEM_REGION2
		           		  , M.MEM_AUTHORITY
		           		  , M.MEM_REGDATE
		           		  , M.MEM_IMAGE
		           		  , M.MEM_GENDER
		           		  , M.MEM_NAME
		           		  , M.MEM_BIRTHDAY
		           		  , M.MEM_LATEST
		           		  , C1.COMM_ID 		as C1_COMM_ID
		           		  , C1.COMM_VALUE   as C1_COMM_VALUE
		           		  , C2.COMM_ID      as C2_COMM_ID
		           		  , C2.COMM_VALUE   as C2_COMM_VALUE
		           		  , C3.COMM_ID		AS C3_COMM_ID
		           		  , C3.COMM_VALUE	AS C3_COMM_VALUE
		           		  , R.REG_ID
		           		  , R.REG_NAME
		           		  , R.REG_PARENT
		           		  , T.TRD_STATUS
		           		  , T.TRD_MAX
		           		  , T.TRD_ENDDATE
		           		  , T.TRD_COST
		           		  , T.TRD_LOC
		           		  , T.TRD_GENDER
		           		  , T.TRD_MINAGE
		           		  , T.TRD_MAXAGE
		           		  , TRUNC(SYSDATE - A.ART_REGDATE) 			AS REST_REGDATE
		           		  , TO_CHAR(T.TRD_ENDDATE, 'YYYY-MM-DD') 	AS TRD_FINISH
		           		  , favorite_count(a.art_id, a.brd_id) 		AS favoriteCount
		           		  , reply_count(a.art_id, a.brd_id)			AS repCount
		            FROM ARTICLE A LEFT OUTER JOIN TRADE T ON(A.TRD_ID = T.TRD_ID)
		                           LEFT OUTER JOIN MEMBER M ON(A.MEM_ID = M.MEM_ID)
		                           LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                           LEFT OUTER JOIN COMM C2 ON(T.TRD_GENDER = C2.COMM_ID)
		                           LEFT OUTER JOIN COMM C3 ON(A.BRD_ID = C3.COMM_ID)
		                           LEFT OUTER JOIN REGION R ON(T.REG_ID = R.REG_ID)              	
			<choose>
				<when test="search == 's_art_title'">
					WHERE a.art_title like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_mem_nickname'">
					WHERE m.mem_nickname like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_art_tag'">
		            WHERE (a.ART_TAG1||a.ART_TAG2||a.ART_TAG3||a.ART_TAG4||a.ART_TAG5) LIKE '%'|| #{keyword} ||'%'
		        </when>
				<otherwise>
					WHERE a.art_title like '%'
				</otherwise>
			</choose>
		        	AND a.brd_id between #{brd_id} and #{brd_id}+60
		            AND A.ISDELETE = 0
		        	ORDER BY A.ART_REGDATE DESC) TT)
		WHERE RN BETWEEN #{start} AND #{end}
			
	</select>

	<select id="dbArticleListBoard" parameterType="Article" resultType="Article">
		SELECT * FROM (
		    SELECT ROWNUM RN, TT.*
		    FROM (
		           SELECT   A.ART_ID
		           		  , A.BRD_ID
		           		  , A.ART_TITLE
		           		  , A.MEM_ID
		           		  , A.ART_REGDATE
		           		  , A.ART_CONTENT
		           		  , A.ART_TAG1
		           		  , A.ART_TAG2
		           		  , A.ART_TAG3
		           		  , A.ART_TAG5
		           		  , A.TRD_ID
		           		  , A.ART_GOOD
		           		  , A.ART_BAD
		           		  , A.ART_READ
		           		  , A.ART_ISNOTICE
		           		  , A.ISDELETE
		           		  , A.REPORT_ID
		           		  , M.MEM_USERNAME
		           		  , M.MEM_PASSWORD
		           		  , M.MEM_NICKNAME
		           		  , M.MEM_EMAIL
		           		  , M.MEM_TEL
		           		  , M.MEM_REGION1
		           		  , M.MEM_REGION2
		           		  , M.MEM_AUTHORITY
		           		  , M.MEM_REGDATE
		           		  , M.MEM_IMAGE
		           		  , M.MEM_GENDER
		           		  , M.MEM_NAME
		           		  , M.MEM_BIRTHDAY
		           		  , M.MEM_LATEST
		           		  , C1.COMM_ID 		as C1_COMM_ID
		           		  , C1.COMM_VALUE   as C1_COMM_VALUE
		           		  , C2.COMM_ID      as C2_COMM_ID
		           		  , C2.COMM_VALUE   as C2_COMM_VALUE
		           		  , C3.COMM_ID		AS C3_COMM_ID
		           		  , C3.COMM_VALUE	AS C3_COMM_VALUE		           		  
		           		  , R.REG_ID
		           		  , R.REG_NAME
		           		  , R.REG_PARENT
		           		  , T.TRD_STATUS
		           		  , T.TRD_MAX
		           		  , T.TRD_ENDDATE
		           		  , T.TRD_COST
		           		  , T.TRD_LOC
		           		  , T.TRD_GENDER
		           		  , T.TRD_MINAGE
		           		  , T.TRD_MAXAGE
		           		  , TRUNC(SYSDATE - A.ART_REGDATE) AS REST_REGDATE
		           		  , TO_CHAR(T.TRD_ENDDATE, 'YYYY-MM-DD') 	AS TRD_FINISH
		           		  , favorite_count(a.art_id, a.brd_id) 		AS favoriteCount
		           		  , reply_count(a.art_id, a.brd_id)			AS repCount
		            FROM ARTICLE A LEFT OUTER JOIN TRADE T ON(A.TRD_ID = T.TRD_ID)
		                           LEFT OUTER JOIN MEMBER M ON(A.MEM_ID = M.MEM_ID)
		                           LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                           LEFT OUTER JOIN COMM C2 ON(T.TRD_GENDER = C2.COMM_ID)
		                           LEFT OUTER JOIN COMM C3 ON(A.BRD_ID = C3.COMM_ID)
		                           LEFT OUTER JOIN REGION R ON(T.REG_ID = R.REG_ID)
			<choose>
				<when test="search == 's_art_title'">
					WHERE a.art_title like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_mem_nickname'">
					WHERE m.mem_nickname like '%' || #{keyword} || '%'
				</when>
				<when test="search == 's_art_tag'">
		            WHERE (a.ART_TAG1||a.ART_TAG2||a.ART_TAG3||a.ART_TAG4||a.ART_TAG5) LIKE '%'|| #{keyword} ||'%'
		        </when>
				<otherwise>
					WHERE a.art_title like '%'
				</otherwise>
			</choose>
		        	AND A.BRD_ID = #{brd_id}
		            AND A.ISDELETE = 0
		        	ORDER BY A.ART_REGDATE DESC) TT)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>


	<select id="dbArticleDetail" parameterType="Article" resultType="Article">
        SELECT  		  a.*
        				, m.*
        				, r.*
        				, reply_count(A.ART_ID, A.BRD_ID)   	AS repCount
        		   		, t.trd_id
        		   		, t.trd_status
        		   		, t.trd_max
        		   		, trunc(sysdate - a.art_regdate)    	AS rest_regdate
            	   		, t.trd_cost
            	   		, t.trd_loc
            	   		, t.trd_gender
            	   		, t.trd_enddate
            	   		, t.trd_minage
            	   		, t.trd_maxage
            	   		, C1.COMM_ID 							AS C1_COMM_ID
		           		, C1.COMM_VALUE   						AS C1_COMM_VALUE
		           		, C2.COMM_ID      						AS C2_COMM_ID
		           		, C2.COMM_VALUE   						AS C2_COMM_VALUE
		           		, C3.COMM_ID							AS C3_COMM_ID
		           		, C3.COMM_VALUE							AS C3_COMM_VALUE
            	   		, to_char(t.trd_enddate, 'YYYY-MM-DD') 	AS trd_finish
            	   		, favorite_count(a.art_id, a.brd_id) 	AS favoriteCount
        FROM    	article a 		LEFT JOIN trade  t 	ON (A.TRD_ID = T.TRD_ID)
                          			LEFT JOIN member m  ON (a.mem_id = m.mem_id)
		                            LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                            LEFT OUTER JOIN COMM C2 ON(T.TRD_GENDER = C2.COMM_ID)
		                            LEFT OUTER JOIN COMM C3 ON(A.BRD_ID = C3.COMM_ID)
                          			LEFT JOIN REGION R  ON(t.reg_id = r.reg_id)
        WHERE 		a.brd_id = #{brd_id}
		AND 		a.art_id = #{art_id}
		AND			a.isdelete = 0
        ORDER BY 	a.brd_id
	</select>
	
<!-- 	<select id="tkFavoriteCount" parameterType="Article" resultType="int">
		select      count(*)
		from        favorite f left Join article a on(a.art_id = f.art_id and a.brd_id = f.brd_id)
                       		   left join member  m on(f.mem_id = m.mem_id)
        where		a.art_id = #{art_id}
		and			a.brd_id = #{brd_id}
		group by    a.art_id, a.brd_id
	</select> -->

	<select id="dbReplyList" parameterType="Article" resultType="Article">
		SELECT        r.*
		             , a.*
		             , m.*
		FROM          reply r 
		LEFT JOIN     article a ON (a.art_id = r.art_id AND a.brd_id = r.brd_id)
		LEFT JOIN     member m ON (r.mem_id = m.mem_id)
		WHERE         a.brd_id = #{brd_id}
		AND           a.art_id = #{art_id}
 		AND           (r.isdelete = 0 OR (r.isdelete = 1 AND r.rep_parent = r.rep_id))
		AND			  r.isdelete = 0
		ORDER BY      r.rep_parent, r.rep_step
	</select>
	
	<select id = "dbInsertArticle" statementType="CALLABLE" parameterType="Article">
		{
		call Insert_Article(
			  #{mem_id,		   mode= IN,  jdbcType=NUMERIC}
			, 401
			, #{trd_max,       mode= IN,  jdbcType=NUMERIC}
			, #{trd_enddate,   mode= IN,  jdbcType=DATE}
			, #{trd_cost,      mode= IN,  jdbcType=NUMERIC}
			, #{reg_id,        mode= IN,  jdbcType=NUMERIC}
			, #{trd_loc,       mode= IN,  jdbcType=VARCHAR}
			, #{trd_gender,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_minage,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_maxage,    mode= IN,  jdbcType=NUMERIC} 
			, #{brd_id,        mode= IN,  jdbcType=NUMERIC}
			, #{art_title,     mode= IN,  jdbcType=VARCHAR}
			, #{art_content,   mode= IN,  jdbcType=VARCHAR}
			, #{art_tag1,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag2,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag3,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag4,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag5,      mode= IN,  jdbcType=VARCHAR}
			, #{insert_result, mode= OUT, jdbcType=NUMERIC})
		}
	</select>
<!-- 	<insert id ="insertTrade" parameterType="Article">
		insert into trade 
				values (trd_id_seq.nextval, 1, '401', #{trd_max}, #{trd_enddate}
				, 0, #{reg_id, jdbcType=NUMERIC}, #{trd_loc, jdbcType=VARCHAR}, #{trd_gender, jdbcType=NUMERIC}
				, #{trd_minage, jdbcType=NUMERIC}, #{trd_maxage, jdbcType=NUMERIC})
			<selectKey resultType="int" keyProperty="trd_id" order="AFTER">
				select trd_id_seq.currval from dual
			</selectKey>
	</insert> -->
	
	<!-- <insert id="insertArticle" parameterType="Article">
		insert into article 
			values ((Select max(art_id) + 1 from article where brd_id = #{brd_id})
            , #{brd_id}, #{art_title}, 1, sysdate, #{art_content, jdbcType=VARCHAR}, #{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}
            , #{art_tag3, jdbcType=VARCHAR}, #{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, #{trd_id, jdbcType=NUMERIC}
            , 0, 0, 0, 0, 0, null)
	</insert> -->
	
 	<update id="dbDeleteArticle" parameterType="Article">
		UPDATE article
		SET    isdelete = 1
		WHERE  brd_id = #{brd_id} 
		AND    art_id = #{art_id}
	</update>
	
<!-- 
 	<delete id="deleteTrade" parameterType="Article">
		Delete from Trade where trd_id = #{trd_id}
	</delete> -->
<!-- 	<update id= "updateTrade" parameterType="Article">
    	UPDATE 	 trade 
    	SET		 reg_id 		= #{reg_id}
    	   		,trd_loc 		= #{trd_loc}
    	   		,trd_minage 	= #{trd_minage}
    	   		,trd_maxage 	= #{trd_maxage}
    	   		,trd_enddate 	= #{trd_enddate}
    	WHERE 	 trd_id = #{trd_id}
	</update>
	
	<update id="updateArticle" parameterType="Article">
		UPDATE 		article 
		SET			brd_id 		= #{brd_id}
				   ,art_title 	= #{art_title}
				   ,art_content = #{art_content}
				   ,art_tag1 	= #{art_tag1}
				   ,art_tag2 	= #{art_tag2}
				   ,art_tag3 	= #{art_tag3}
				   ,art_tag4 	= #{art_tag4}
				   ,art_tag5 	= #{art_tag5} 
 		WHERE		art_id 		= #{art_id}
 		AND			brd_id 		= #{brd_id}
	</update> -->
	
	<select id="dbUpdateArticle" parameterType="Article" statementType="CALLABLE">
	{
		call Update_Article(
			  #{trd_id, 	   mode= IN,  jdbcType=NUMERIC}
			, #{mem_id,		   mode= IN,  jdbcType=NUMERIC}
			, 401
			, #{trd_max,       mode= IN,  jdbcType=NUMERIC}
			, #{trd_enddate,   mode= IN,  jdbcType=DATE}
			, #{trd_cost,      mode= IN,  jdbcType=NUMERIC}
			, #{reg_id,        mode= IN,  jdbcType=NUMERIC}
			, #{trd_loc,       mode= IN,  jdbcType=VARCHAR}
			, #{trd_gender,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_minage,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_maxage,    mode= IN,  jdbcType=NUMERIC}
			, #{art_id,		   mode= IN,  jdbcType=NUMERIC}
			, #{brd_id,        mode= IN,  jdbcType=NUMERIC}
			, #{art_title,     mode= IN,  jdbcType=VARCHAR}
			, #{art_content,   mode= IN,  jdbcType=VARCHAR}
			, #{art_tag1,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag2,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag3,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag4,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag5,      mode= IN,  jdbcType=VARCHAR}
			, #{insert_result, mode= OUT, jdbcType=NUMERIC})
		}
	</select>
	
	<update id="dbReadArticleCnt" parameterType="Article">
		UPDATE      ARTICLE
        SET         ART_READ = ART_READ + 1
        WHERE       BRD_ID = #{brd_id}
        AND         ART_ID = #{art_id}
	</update>
	
	<select id="dbInsertReportArticle" parameterType="Article" statementType="CALLABLE">
	{
		call Insert_Article_Report(
			 #{report_id,		mode=IN,   jdbcType=NUMERIC}
		   , #{mem_id,			mode=IN,   jdbcType=NUMERIC}
		   , #{report_content,  mode=IN,   jdbcType=VARCHAR}
		   , #{art_id,			mode=IN,   jdbcType=NUMERIC}
		   , #{brd_id,	        mode=IN,   jdbcType=NUMERIC}
		   , #{insert_result,   mode=OUT,  jdbcType=NUMERIC})
	}	
	</select>
	
	<select id="dbInsertReportReply" parameterType="Article" statementType="CALLABLE">
	{
		call Insert_Reply_Report(
			 #{report_id,		mode=IN,   jdbcType=NUMERIC}
		   , #{mem_id,			mode=IN,   jdbcType=NUMERIC}
		   , #{report_content,  mode=IN,   jdbcType=VARCHAR}
		   , #{art_id,			mode=IN,   jdbcType=NUMERIC}
		   , #{brd_id,	        mode=IN,   jdbcType=NUMERIC}
		   , #{rep_id, 			mode=IN,   jdbcType=NUMERIC}
		   , #{insert_result,   mode=OUT,  jdbcType=NUMERIC})
	}	
	</select>
	
<!-- 	<update id="dbUpdateArticleReport" parameterType="Article">
		UPDATE      ARTICLE
        SET         REPORT_ID = REPORT_ID_SEQ.CURRVAL
        WHERE       brd_id = #{brd_id}
        AND         ART_ID = #{art_id}
	</update> -->
	
	<update id="dbUpdateReplyReport" parameterType="Article">
		UPDATE      Reply
        SET         REPORT_ID = REPORT_ID_SEQ.CURRVAL
        WHERE       brd_id = #{brd_id}
        AND         ART_ID = #{art_id}
        AND			REP_ID = #{rep_id}
	</update>
	
	<select id="dbTradeJoinMember" parameterType="Article" resultType="Article">
		select 	j.*, m.*
		from 	join j left join member m  on (j.mem_id = m.mem_id)
		where 	trd_id = #{trd_id}
	</select>
	
	<select id="dbTradeWaitingMember" parameterType="Article" resultType="Article">
		select 	w.*, m.*
		from 	Waiting w left join member m  on (w.mem_id = m.mem_id)
		where 	trd_id = #{trd_id}
	</select>
	
	<insert id="dbTradeWaiting" parameterType="Article">
		Insert into waiting (trd_id, mem_id, wait_date)
		values              (#{trd_id}, #{mem_id}, sysdate)
	</insert>
	
		
	<insert id="dbTradeInsertJoin" parameterType="Article">
		Insert into Join (trd_id, mem_id, join_date)
		values           (#{trd_id}, #{mem_id}, sysdate)
	</insert>
	
	<delete id="dbTradeDeleteWaiting" parameterType="Article">
		DELETE From waiting
		WHERE trd_id   = #{trd_id}
		AND   mem_id   = #{mem_id}
	
	</delete>
	
	<delete id="dbJoinDelete" parameterType="Article">
	DELETE From Join
	WHERE trd_id 	= #{trd_id}
	AND mem_id 		= #{mem_id}
	</delete>
	
	
	<insert id="dbFavoriteArticle" parameterType="Article">
		Insert into Favorite (art_id, brd_id, mem_id)
		values				(#{art_id}, #{brd_id}, #{mem_id})
	</insert>
	
	<delete id="dbFavoriteArticleDelete" parameterType="Article">
		DELETE From favorite
		WHERE art_id   = #{art_id}
		AND   brd_id   = #{brd_id}
        AND   mem_id   = #{mem_id}
	</delete>
	
	<update id="dbChangeStatus" parameterType="Article">
		UPDATE trade t
		SET t.trd_status = 402
		WHERE t.trd_id = #{trd_id} 
		AND (SELECT COUNT(*) FROM join j WHERE j.trd_id = t.trd_id) = #{trd_max}
	</update>
	
	<update id="dbChangeEndStatus" parameterType="Article">
		UPDATE trade
		SET trd_status = 403
		WHERE trd_id = #{trd_id}
		AND sysdate > trd_enddate
	</update>	
	
	<update id="dbChangeCancelStatus" parameterType="Article">
		UPDATE trade
		SET trd_status = 404
		WHERE trd_id = #{trd_id}
	</update>	
	
	<update id="dbArticleGoodUp" parameterType="Article">
		UPDATE 	Article
		SET 	ART_GOOD = ART_GOOD + 1
		WHERE 	ART_ID = #{art_id}
		AND	  	brd_id = #{brd_id}
	</update>
	
	<update id="dbArticleBadUp" parameterType="Article">
		UPDATE 	Article
		SET 	ART_bad = ART_bad + 1
		WHERE 	ART_ID = #{art_id}
		AND	  	brd_id = #{brd_id}
	</update>
	
	<update id="dbReplyGoodUp" parameterType="Article">
		UPDATE 	reply
		SET 	rep_good = rep_good + 1
		WHERE 	art_id = #{art_id}
		AND	  	brd_id = #{brd_id}
		and		rep_id = #{rep_id}
	</update>
	
	<update id="dbReplyBadUp" parameterType="Article">
		UPDATE 	reply
		SET 	rep_bad = rep_bad + 1
		WHERE 	art_id = #{art_id}
		AND	  	brd_id = #{brd_id}
		and		rep_id = #{rep_id}
	</update>
	
<!-- 		<select id="dbCondArticleCnt" parameterType="Article" resultType="int">
	SELECT Count(*) FROM article a 
	LEFT JOIN member m ON a.mem_id = m.mem_id
	WHERE
		<choose>
			<when test="search == 's_art_title'">
				a.art_title like '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_mem_nickname'">
				m.mem_nickname like '%' || #{keyword} || '%'
			</when>
			<otherwise>
				a.art_title like '%'
			</otherwise>
		</choose>
	AND a.brd_id between 1010 and 1060	
	AND a.isdelete = 0	
	</select>	 -->
	
	
	<!-- <select id ="dbListSearchArticle" parameterType="Article" resultType="Article">
			SELECT * FROM (
		    SELECT ROWNUM RN, TT.*
		    FROM (
		           SELECT   A.ART_ID
		           		  , A.BRD_ID
		           		  , A.ART_TITLE
		           		  , A.MEM_ID
		           		  , A.ART_REGDATE
		           		  , A.ART_CONTENT
		           		  , A.ART_TAG1
		           		  , A.ART_TAG2
		           		  , A.ART_TAG3
		           		  , A.ART_TAG4
		           		  , A.ART_TAG5
		           		  , A.TRD_ID
		           		  , A.ART_GOOD
		           		  , A.ART_BAD
		           		  , A.ART_READ
		           		  , A.ART_ISNOTICE
		           		  , A.ISDELETE
		           		  , A.REPORT_ID
		           		  , M.MEM_USERNAME
		           		  , M.MEM_PASSWORD
		           		  , M.MEM_NICKNAME
		           		  , M.MEM_EMAIL
		           		  , M.MEM_TEL
		           		  , M.MEM_REGION1
		           		  , M.MEM_REGION2
		           		  , M.MEM_AUTHORITY
		           		  , M.MEM_REGDATE
		           		  , M.MEM_IMAGE
		           		  , M.MEM_GENDER
		           		  , M.MEM_NAME
		           		  , M.MEM_BIRTHDAY
		           		  , M.MEM_LATEST
		           		  , C1.COMM_ID 		as C1_COMM_ID
		           		  , C1.COMM_VALUE   as C1_COMM_VALUE
		           		  , C2.COMM_ID      as C2_COMM_ID
		           		  , C2.COMM_VALUE   as C2_COMM_VALUE
		           		  , R.REG_ID
		           		  , R.REG_NAME
		           		  , R.REG_PARENT
		           		  , T.TRD_STATUS
		           		  , T.TRD_MAX
		           		  , T.TRD_ENDDATE
		           		  , T.TRD_COST
		           		  , T.TRD_LOC
		           		  , T.TRD_GENDER
		           		  , T.TRD_MINAGE
		           		  , T.TRD_MAXAGE
		           		  , TRUNC(SYSDATE - A.ART_REGDATE) 			AS REST_REGDATE
		           		  , TO_CHAR(T.TRD_ENDDATE, 'YYYY-MM-DD') 	AS TRD_FINISH
		           		  , favorite_count(a.art_id, a.brd_id) 		AS favoriteCount
		           		  , reply_count(a.art_id, a.brd_id)			AS repCount
		            FROM ARTICLE A LEFT OUTER JOIN TRADE T ON(A.TRD_ID = T.TRD_ID)
		                           LEFT OUTER JOIN MEMBER M ON(A.MEM_ID = M.MEM_ID)
		                           LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                           LEFT OUTER JOIN COMM C2 ON(T.TRD_GENDER = C2.COMM_ID)
		                           LEFT OUTER JOIN REGION R ON(T.REG_ID = R.REG_ID)
		<choose>
			<when test="search == 's_art_title'">
				Where a.art_title like '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_mem_nickname'">
				Where m.mem_nickname like '%' || #{keyword} || '%'
			</when>
			<otherwise>
				Where a.art_title like '%'
			</otherwise>
		</choose>
		        	AND A.BRD_ID BETWEEN 1010 AND 1060
		            AND A.ISDELETE = 0
		        	ORDER BY A.ART_REGDATE DESC) TT)
		WHERE RN BETWEEN #{start} AND #{end}
	
	</select> -->
	
	
	
	
	
	
	
	


	
	<!-- 김찬영 -->
	<!-- 리스트 조회-->
 	 <select id="cyArticleTotal" resultType="int">
		select Count(*) 
		FROM article
		where brd_id between 1400 and 1499
	</select>  
		
	<!-- 페이지 불러오기 -->
   	<select id="cyArticleListAll" parameterType="Article" resultType="Article">
		SELECT *
		FROM
		(
		    SELECT rownum rn, t.*
		    FROM
		        (SELECT a.*, m.mem_nickname, m.mem_image, C.COMM_VALUE BRD_NAME
		         FROM article a
		         LEFT OUTER JOIN member m ON (a.mem_id = m.mem_id)
		         LEFT OUTER JOIN COMM C ON (a.brd_id = C.COMM_ID)
		         WHERE
		            <choose>
		                <when test="brd_id == 1400">
		                    a.brd_id BETWEEN 1400 AND 1499
		                </when>
		                <otherwise>
		                    a.brd_id = #{brd_id}
		                </otherwise>
		            </choose>
		         AND a.isdelete = 0
		         ORDER BY a.art_regdate desc) t
		)
		WHERE rn BETWEEN #{start} AND #{end}
	</select>  
<!--    	<select id="cyArticleListAll" parameterType="Article" resultType="Article">
		
		SELECT *
		FROM
		(
		    SELECT rownum rn, a.*
		    FROM
		        (SELECT *
		         FROM article
		         where  
		        <choose>
		        	<when test="brd_id == 1400">
		        		brd_id between 1400 and 1499
		        	</when>
		        	<otherwise>
		        		brd_id = #{brd_id}
		        	</otherwise>
		        </choose>
		         and isdelete = 0
		     ORDER BY art_id) a
		)
			WHERE rn between #{start} and #{end}
	</select>   -->
	<!-- 조회 -->
 	<select id="cycount" resultType="int">
	 select count(brd_id) from article
	</select> 
	
	<!-- 검색 -->
<!--  	<select id="cyArticleKeyword" parameterType="Article" resultType="Article">
	<![CDATA[
	select brd_id, art_title, art_content, mem_id, art_regdate, art_tag1, art_tag2, art_tag3, art_tag4, art_tag5 from(
                select rownum as rn, brd_id, art_title, art_content, mem_id, art_regdate, art_tag1, art_tag2, art_tag3, art_tag4, art_tag5 
                from article where rownum <= 10 and art_title like '%keyword%')
        where rn > 0;
        ]]>	
	</select>  -->
	
	
	<!-- 상세페이지 불러오기 -->
 	<select id="cyArticlereadDetail" parameterType="Article" resultType="Article">
			select *
			from article a
			left join member m 
			on a.mem_id = m.mem_id
			where a.art_id=#{art_id} and a.brd_id = #{brd_id} 
	</select>
	
	
		<!-- 게시글 작성 -->
 	<insert id="cyArticleinsert" parameterType="Article">
		insert into 
			article
            (art_id,
            brd_id, art_title, mem_id, art_regdate, art_tag1, art_tag2, art_tag3, art_tag4, art_tag5, 
			art_content, art_good, art_bad, art_read, isdelete, report_id)
			values
            ((Select max(art_id) + 1 from article),
            #{brd_id}, #{art_title}, #{mem_id}, SYSDATE, #{art_tag1}, #{art_tag2},
			#{art_tag3}, #{art_tag4}, #{art_tag5},  #{art_content}, 0, 0, 0, 0, NULL)
	</insert> 
	
		<!-- 게시글 작성 -->
   	<insert id="cyArticlewrite" parameterType="Article">
		insert into 
			article(art_id, brd_id, art_title, mem_id, art_regdate, art_tag1, art_tag2, art_tag3, art_tag4, art_tag5, 
			art_content, trd_id, art_good, art_bad, art_read, isdelete, report_id)
			values((Select max(art_id) + 1 from article
			where brd_id = #{brd_id}), #{brd_id}, #{mem_id}, #{art_title}, SYSDATE, #{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR},
			#{art_tag3, jdbcType=VARCHAR}, #{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR},  #{art_content}, NULL, 0, 0, 0, 0, NULL)
	</insert>  
	
	<!-- 수정페이지 불러오기 -->
	<select id="cyArticlereadupdate" parameterType="Article" resultType="Article">
			select *
			from article 
			where art_id=#{art_id} and brd_id = #{brd_id}
	</select>
 
    	<!-- 글 수정하기 -->
	 <update id = "cyArticlemodify" parameterType="Article">
			update article 
		set 
			art_title = #{art_title, jdbcType=VARCHAR},
			art_tag1 = #{art_tag1, jdbcType=VARCHAR},
			art_tag2 = #{art_tag2, jdbcType=VARCHAR},
			art_tag3 = #{art_tag3, jdbcType=VARCHAR},
			art_tag4 = #{art_tag4, jdbcType=VARCHAR},
			art_tag5 = #{art_tag5, jdbcType=VARCHAR},
			art_content = #{art_content, jdbcType=CLOB} 
		where art_id = #{art_id, jdbcType=NUMERIC} and brd_id = #{brd_id, jdbcType=NUMERIC}
	</update>
	
	<!-- 글 삭제하기 -->
	<update id ="cyArticledelete" parameterType="Article">
	update article set isdelete = 1
	where art_id= #{art_id} and brd_id = #{brd_id}
	</update>

	<!-- 조회수 증가 -->
	<update id="cyUpdateView" parameterType="Article">
		update article set art_read = art_read + 1 
	where art_id = #{art_id} and brd_id = #{brd_id}
	</update>
	
	<!-- 추천 -->
	<update id="cyUpdateGood" parameterType="Article">
		update article set art_good = art_good + 1 
		where art_id = #{art_id} and brd_id = #{brd_id}
	</update>

	<!-- 비추천 -->
	<update id="cyUpdateBad" parameterType="Article">
		update article set art_bad = art_bad + 1 
		where art_id = #{art_id} and brd_id = #{brd_id}
	</update>

		
			
			
			
			
			
			
			
			
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	<!-- 최승환 -->
	
	<!-- 카운트 --> 
	<select id="shCustomerCount" resultType="int" parameterType="Article">
		SELECT	Count(*)
		FROM 	article A join member M using(mem_id)
		WHERE 	A.brd_id 
		<choose>
			<when test="brd_id == 999">
				BETWEEN #{brd_id} and #{brd_id}+600
			</when>
			<when test="brd_id % 100 != 0">
				= #{brd_id}
			</when>
			<otherwise>
				BETWEEN #{brd_id} and #{brd_id}+99
			</otherwise>
		</choose>
		AND		A.isdelete = 0
		<choose>
            <when test="search == 'shs_title'">
                AND A.art_title LIKE '%' || #{search_keyword} || '%'
            </when>
            <when test="search == 'shs_content'">
                AND A.art_content LIKE '%' || #{search_keyword} || '%'
            </when>
            <when test="search == 'shs_title_content'">
                AND (A.art_title || ' ' || A.art_content) LIKE '%' || #{search_keyword} || '%'
            </when>
            <when test="search == 'shs_nickname'">
                AND M.mem_nickname LIKE '%' || #{search_keyword} || '%'
            </when>
            <when test="search == 'articleTag'">
	       		AND (A.art_tag1||A.art_tag2||A.art_tag3||A.art_tag4||A.art_tag5) LIKE '%'|| #{search_keyword} ||'%'
	       	</when>
            <otherwise></otherwise>
       	</choose>
	</select>
	
	
	<!-- 목록 전체  검색포함-->
		<select id="shListCustomer" parameterType="Article" resultType="Article">
			SELECT  *
			FROM    (SELECT ROWNUM AS RN, S.*
			         FROM   (SELECT *
			                 FROM ( SELECT  *
			                        FROM    ARTICLE A
			                        JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
			                                    FROM    BOARD B JOIN COMM C1
			                                    ON      BRD_ID IN COMM_ID
			                                 )USING(BRD_ID)
			                        JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
			                                    FROM    MEMBER M JOIN COMM C2
			                                    ON      MEM_GENDER IN COMM_ID
			                                 )USING(MEM_ID)
			                        LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
			                                                FROM 	REPLY
			                                                WHERE 	ISDELETE = 0
			                                                GROUP BY(ART_ID, BRD_ID)
			                                            )USING(BRD_ID, ART_ID)
	                                WHERE 	A.ISDELETE = 0
					                AND     BRD_ID <choose>
				                 						<when test="brd_id == 999">
															BETWEEN #{brd_id} and #{brd_id}+600
														</when>
														<when test="brd_id % 100 != 0">
															= #{brd_id}
														</when>
														<otherwise>
															BETWEEN #{brd_id} and #{brd_id}+99
														</otherwise>
													</choose>
			                       )
			                 <choose>
			                 	<when test="search == 'shs_article'">
			                 		WHERE (ART_TITLE || ART_CONTENT) LIKE '%'|| #{search_keyword} ||'%'
			                 	</when>
			                 	<when test="search == 'shs_title'">
			                 		WHERE ART_TITLE LIKE '%'|| #{search_keyword} ||'%'
			                 	</when>
			                 	<when test="search == 'shs_content'">
			                 		WHERE ART_CONTENT LIKE '%'|| #{search_keyword} ||'%'
			                 	</when>
			                 	<when test="search == 'shs_nickname'">
			                 		WHERE MEM_NICKNAME LIKE '%'|| #{search_keyword} ||'%'
			                 	</when>
			                 	<when test="search == 'articleTag'">
			                 		WHERE (ART_TAG1||ART_TAG2||ART_TAG3||ART_TAG4||ART_TAG5) LIKE '%'|| #{search_keyword} ||'%'
			                 	</when>
			                 	<otherwise></otherwise>
			                 </choose>
			                 ORDER BY   ART_REGDATE DESC) S)
			WHERE 	RN BETWEEN #{start} and #{end}
		</select>
		
<!-- 		<select id="shListCustomer" parameterType="Article" resultType="Article">
		SELECT *
  		FROM (SELECT	ROWNUM RN, A.*, M.MEM_NICKNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT, C.COMM_ID, C.COMM_VALUE
    		FROM 	ARTICLE A
    		LEFT JOIN MEMBER M ON A.MEM_ID = M.MEM_ID
    		LEFT JOIN	(
      					SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
      					FROM REPLY
      					GROUP BY ART_ID, BRD_ID
    				 	) R
    			ON A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID
    		LEFT JOIN COMM C ON A.MEM_ID = C.COMM_ID
    		WHERE A.BRD_ID BETWEEN 1500 AND 1600 and A.isdelete=0
    		<choose>
	            <when test="search == 'shs_title'">
                	AND A.art_title LIKE '%' || #{search_keyword} || '%'
	            </when>
	            <when test="search == 'shs_content'">
	                AND A.art_content LIKE '%' || #{search_keyword} || '%'
	            </when>
	            <when test="search == 'shs_title_content'">
	                AND (A.art_title || ' ' || A.art_content) LIKE '%' || #{search_keyword} || '%'
	            </when>
	            <when test="search == 'shs_nickname'">
	                AND M.mem_nickname LIKE '%' || #{search_keyword} || '%'
	            </when>
	            <when test="search == 'articleTag'">
		       		AND (A.art_tag1||A.art_tag2||A.art_tag3||A.art_tag4||A.art_tag5) LIKE '%'|| #{search_keyword} ||'%'
		       	</when>
	            <otherwise></otherwise>
        	</choose>
    		ORDER BY A.ART_ID DESC
  			)
  		WHERE RN BETWEEN #{start} AND #{end}
	</select> -->
	
<!-- 	메뉴 
	<select id="shListCustomerMenu" parameterType="Article" resultType="Article">
		SELECT *
  		FROM 
  			(
    		SELECT ROWNUM RN, A.*, M.MEM_NICKNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT, C.COMM_VALUE
    		FROM ARTICLE A
    		LEFT JOIN MEMBER M ON A.MEM_ID = M.MEM_ID
    		LEFT JOIN 
    			(
      			SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
      			FROM REPLY
      			GROUP BY ART_ID, BRD_ID
    			) R
    			ON A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID
     		LEFT JOIN COMM C ON C.COMM_ID = A.COMM_ID
    		WHERE A.BRD_ID BETWEEN 1500 AND 1600 and A.isdelete=0
		        <choose>
		            <when test="search == 'shs_title'">
	                	AND A.art_title LIKE '%' || #{search_keyword} || '%'
		            </when>
		            <when test="search == 'shs_content'">
		                AND A.art_content LIKE '%' || #{search_keyword} || '%'
		            </when>
		            <when test="search == 'shs_title_content'">
		                AND (A.art_title || ' ' || A.art_content) LIKE '%' || #{search_keyword} || '%'
		            </when>
		            <when test="search == 'shs_nickname'">
		                AND M.mem_nickname LIKE '%' || #{search_keyword} || '%'
		            </when>
		            <when test="search == 'articleTag'">
			       		AND (A.art_tag1||A.art_tag2||A.art_tag3||A.art_tag4||A.art_tag5) LIKE '%'|| #{search_keyword} ||'%'
			       	</when>
		            <otherwise></otherwise>
        		</choose> 
    		ORDER BY A.ART_ID DESC
  			)
  		WHERE RN BETWEEN #{start} AND #{end} 
	</select> -->

	<!-- 게시판 상세보기 -->
	
		<select id="shCustomerDetail" parameterType="Article" resultType="Article">
		  SELECT A.*, M.MEM_NICKNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT, C.COMM_ID, C.COMM_VALUE
		  FROM ARTICLE A
		  LEFT JOIN MEMBER M ON A.MEM_ID = M.MEM_ID
		  LEFT JOIN (SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
		             FROM REPLY
		             GROUP BY ART_ID, BRD_ID) R ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID)
		  LEFT JOIN COMM C ON A.MEM_ID = C.COMM_ID
		  WHERE A.ART_ID = #{art_id} AND A.BRD_ID = #{brd_id} AND A.isdelete = 0
		</select>

		
<!-- 	<select id="shCustomerDetail" parameterType="Article" resultType="Article">
        	 SELECT A.*, M.MEM_NICKNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT
			 FROM ARTICLE A
			 LEFT JOIN MEMBER M ON A.MEM_ID = M.MEM_ID
			 LEFT JOIN (SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
			 	 		FROM REPLY
			 	 		GROUP BY ART_ID, BRD_ID) R
			 	 		ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID)
			 WHERE A.ART_ID = #{art_id} AND A.BRD_ID = #{brd_id} and A.isdelete=0
	</select> -->
	
	<!-- 게시판 글쓰기 -->
	
	<insert id="shInsertCustomer" parameterType="Article">
    INSERT INTO article (art_id, brd_id, art_title, mem_id, art_content, art_regdate, art_tag1, art_tag2, art_tag3, art_tag4, art_tag5, art_good, art_bad, art_read, art_isnotice, isdelete) 
    VALUES ((Select max(art_id) + 1 from article where brd_id = #{brd_id}), #{brd_id}, #{art_title}, #{mem_id}, #{art_content}, SYSDATE, #{art_tag1}, #{art_tag2}, #{art_tag3}, #{art_tag4}, #{art_tag5}, 0, 0, 0, 0, 0)
	</insert>
	
	<!-- 게시판 수정하기 -->
	
	<update id="shCustomerUpdate" parameterType="Article">
		UPDATE article
		SET 
			art_title = #{art_title}, 
			art_content = #{art_content}, 
			art_tag1 = #{art_tag1, jdbcType = VARCHAR}, 
			art_tag2 = #{art_tag2, jdbcType = VARCHAR}, 
			art_tag3 = #{art_tag3, jdbcType = VARCHAR}, 
			art_tag4 = #{art_tag4, jdbcType = VARCHAR}, 
			art_tag5 = #{art_tag5, jdbcType = VARCHAR}
		WHERE brd_id = #{brd_id} AND art_id = #{art_id}
	</update>
	
	<!-- 게시판 글삭제하기 -->
	
	<update id="shDeleteCustomer" parameterType="Article">
		UPDATE article
		SET isdelete = 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id}
	</update>
	
	<!-- 조회수 -->
	
	<update id="shViewCount" parameterType="Article">
		UPDATE article
		SET art_read = art_read + 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id} AND isdelete = 0
	</update>
	
	<!-- 추천 비추천 -->
	
	<update id="shCustomLike" parameterType="Article">
		UPDATE article SET art_good = art_good + 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id}
	</update>
	
	<update id="shCustomDislike" parameterType="Article">
		UPDATE article SET art_bad = art_bad + 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id}
	</update>
	
	
	
	
	<!-- 김진현 -->
	
	<select id="JHDutchpay" parameterType="Article" resultType="Article">
		SELECT * FROM (
		    SELECT ROWNUM RN, TT.*
		    FROM (
		           SELECT   A.ART_ID
		           		  , A.BRD_ID
		           		  , A.ART_TITLE
		           		  , A.MEM_ID
		           		  , A.ART_REGDATE
		           		  , A.ART_CONTENT
		           		  , A.ART_TAG1
		           		  , A.ART_TAG2
		           		  , A.ART_TAG3
		           		  , A.ART_TAG4
		           		  , A.ART_TAG5
		           		  , A.TRD_ID
		           		  , A.ART_GOOD
		           		  , A.ART_BAD
		           		  , A.ART_READ
		           		  , A.ART_ISNOTICE
		           		  , A.ISDELETE
		           		  , A.REPORT_ID
		           		  , M.MEM_USERNAME
		           		  , M.MEM_PASSWORD
		           		  , M.MEM_NICKNAME
		           		  , M.MEM_EMAIL
		           		  , M.MEM_TEL
		           		  , M.MEM_REGION1
		           		  , M.MEM_REGION2
		           		  , M.MEM_AUTHORITY
		           		  , M.MEM_REGDATE
		           		  , M.MEM_IMAGE
		           		  , M.MEM_GENDER
		           		  , M.MEM_NAME
		           		  , M.MEM_BIRTHDAY
		           		  , M.MEM_LATEST
		           		  , C1.COMM_ID 		as C1_COMM_ID
		           		  , C1.COMM_VALUE   as status_name
		           		  , C2.comm_value   as brd_name
		           		  , R.REG_ID
		           		  , R.REG_NAME
		           		  , R.REG_PARENT
		           		  , T.TRD_STATUS
		           		  , T.TRD_MAX
		           		  , T.TRD_ENDDATE
		           		  , T.TRD_COST
		           		  , T.TRD_LOC
		           		  , T.TRD_MAXAGE
		           		  , TRUNC(SYSDATE - A.ART_REGDATE) 			AS REST_REGDATE
		           		  , TO_CHAR(T.TRD_ENDDATE, 'YYYY-MM-DD') 	AS TRD_FINISH
		           		  , favorite_count(a.art_id, a.brd_id) 		AS favoriteCount
		           		  , REP_CNT(brd_id, art_id) AS reply_count
		            FROM ARTICLE A LEFT OUTER JOIN TRADE T ON(A.TRD_ID = T.TRD_ID)
		                           LEFT OUTER JOIN MEMBER M ON(A.MEM_ID = M.MEM_ID)
		                           LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                           LEFT OUTER JOIN COMM C2 ON C2.comm_id = a.brd_id
		                           LEFT OUTER JOIN REGION R ON(T.REG_ID = R.REG_ID)
		                    <choose>
		                    <when test="brd_id == 1100">
		        				WHERE A.BRD_ID BETWEEN 1100 AND 1200
                  			</when>
                  		<otherwise>
                    			WHERE A.BRD_ID = #{brd_id}
                  		</otherwise>
                  		</choose>
		            AND A.ISDELETE = 0
		        	ORDER BY A.ART_REGDATE DESC) TT)
		WHERE RN BETWEEN #{start} AND #{end}
	</select> 
	
	<select id="JHDutchpayDetail" parameterType="Article" resultType="Article">
		SELECT a.art_id, a.brd_id, t.trd_id, mem_id	,c.comm_id ,a.report_id, c2.comm_value AS brd_name,
			   m.mem_image, m.mem_username, m.mem_nickname,
       		   c.comm_value, a.art_title, a.art_regdate, 
       		   a.art_tag1, a.art_tag2, a.art_tag3, a.art_tag4, a.art_tag5,
      		   t.trd_cost,
      		   t.trd_max,
       		   r.reg_name,
       		   t.trd_loc, 
       		   t.trd_enddate , a.art_good, a.art_bad, a.art_read,
       		   a.art_content, 
               REP_CNT(brd_id, art_id) AS reply_count
		FROM Article a
		LEFT JOIN trade t  ON a.trd_id = t.trd_id
		LEFT JOIN comm c   ON t.trd_status = c.comm_id
		LEFT JOIN comm c2  ON c2.comm_id = a.brd_id
		LEFT JOIN region r ON t.reg_id = r.reg_id
		LEFT JOIN member m ON a.mem_id = m.mem_id
        WHERE a.brd_id=#{brd_id} and a.art_id=#{art_id}
        
	</select>
	
	<select id="JHRepList" parameterType="Article" resultType="Article">
		SELECT r.*, m.mem_nickname, m.mem_image
		FROM reply r
		LEFT JOIN member m
		ON r.mem_id = m.mem_id
		WHERE brd_id=#{brd_id} and art_id=#{art_id} and r.isdelete = 0
		ORDER BY rep_regdate asc, rep_parent desc, rep_step desc 
	</select>
	
	<insert id="JHReplyInsert" parameterType="Article">
      INSERT 
      INTO REPLY (  ART_ID
               , BRD_ID
               , REP_ID
               , MEM_ID
               , REP_CONTENT
               , REP_REGDATE
               , REP_GOOD
               , REP_BAD
               , REP_PARENT
               , REP_STEP
               , ISDELETE)
      VALUES       (  #{art_id}
               , #{brd_id}
               , (SELECT NVL(MAX(REP_ID), 0) + 1 FROM REPLY
                  WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id})
               , #{mem_id}
               , #{rep_content, jdbcType=VARCHAR}
               , SYSDATE
               , 0
               , 0
               , <choose>
                  <when test="rep_parent == null">
                     (SELECT NVL(MAX(REP_ID), 0) + 1 FROM REPLY
                      WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}),
                  </when>
                  <otherwise>
                     #{rep_parent},
                  </otherwise>
                 </choose>
                    
                 <choose>
                  <when test="rep_parent == null">
                     1,
                  </when>
                  <otherwise>
                  (SELECT NVL(MAX(REP_STEP), 0) + 1 FROM REPLY
                   WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
                         AND REP_PARENT = #{rep_parent}),
                  </otherwise>
                 </choose>
                 0)
   </insert>
	
	<update id="JHReplyDelete" parameterType="Article">
		UPDATE reply 
		SET  isdelete = 1
		WHERE brd_id = #{brd_id}
		AND art_id = #{art_id}
		AND rep_id = #{rep_id}
	</update>
	
	<select id="JHInsert" parameterType="Article" statementType="CALLABLE">
		{
			CALL insert_form(
				#{brd_id, 			mode=IN,  jdbcType=NUMERIC},
				#{art_title, 		mode=IN,  jdbcType=VARCHAR},
				#{art_regdate, 		mode=IN,  jdbcType=DATE},
				#{art_tag1, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag2, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag3, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag4, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag5, 		mode=IN,  jdbcType=VARCHAR},
				#{art_content, 		mode=IN,  jdbcType=CLOB},
				#{isdelete, 		mode=IN,  jdbcType=NUMERIC},
				#{mem_id, 			mode=IN,  jdbcType=NUMERIC},
				#{art_isnotice, 	mode=IN,  jdbcType=NUMERIC},
				#{trd_status, 		mode=IN,  jdbcType=NUMERIC},
				#{trd_enddate, 		mode=IN,  jdbcType=DATE},
				#{trd_max, 			mode=IN,  jdbcType=NUMERIC},
				#{trd_cost, 		mode=IN,  jdbcType=NUMERIC},
				#{trd_loc, 			mode=IN,  jdbcType=VARCHAR},
				#{reg_id, 			mode=IN,  jdbcType=NUMERIC}
			)
		}
	</select>
	
	<select id="JHUpdateForm" parameterType="Article" resultType="Article">
		SELECT a.art_id, a.brd_id,
			   m.mem_image, m.mem_username, m.mem_nickname,
			   a.art_regdate,
			   a.art_title,
       		   a.art_tag1, a.art_tag2, a.art_tag3, a.art_tag4, a.art_tag5,
      		   t.trd_cost,
      		   t.trd_max,
      		   t.trd_loc,
      		   t.trd_enddate,
      		   r.reg_id,
       		   a.art_content
		FROM Article a
		LEFT JOIN trade t  ON a.trd_id = t.trd_id
		LEFT JOIN region r ON t.reg_id = r.reg_id
		LEFT JOIN member m ON a.mem_id = m.mem_id
		WHERE a.brd_id=#{brd_id} and a.art_id=#{art_id}

	</select>
	
	<select id="JHUpdate" parameterType="Article" statementType="CALLABLE">
		 {
			CALL update_form(
				#{art_id, 			mode=IN,  jdbcType=NUMERIC},
				#{brd_id, 			mode=IN,  jdbcType=NUMERIC},
				#{art_title, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag1, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag2, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag3, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag4, 		mode=IN,  jdbcType=VARCHAR},
				#{art_tag5, 		mode=IN,  jdbcType=VARCHAR},
				#{art_content, 		mode=IN,  jdbcType=CLOB},
				#{trd_saveEnddate, 	mode=IN,  jdbcType=DATE},
				#{trd_cost, 		mode=IN,  jdbcType=NUMERIC},
				#{trd_max, 			mode=IN,  jdbcType=NUMERIC},
				#{reg_id, 			mode=IN,  jdbcType=NUMERIC},
				#{trd_loc, 			mode=IN,  jdbcType=VARCHAR}
			)
		}
	</select>
	
	<select id="JHDelete" parameterType="Article" resultType="Article">
		UPDATE Article SET isdelete = 1 WHERE brd_id = #{brd_id} and art_id = #{art_id}
	</select>
	
	<update id="JHDeatilRead" parameterType="Article" >
		UPDATE Article SET art_read = art_read+1 WHERE brd_id=#{brd_id} and art_id=#{art_id}
	</update>
	
	<select id="JHarticleCnt" resultType="int" parameterType="Article">
		SELECT Count(*) 
		FROM article
		WHERE brd_id
		<choose>
			<when test="brd_id == 1100">
				BETWEEN #{brd_id} and  #{brd_id}+60
			</when>			
			<when test="brd_id == 1110">
				= #{brd_id}
			</when>			
			<when test="brd_id == 1120">
				= #{brd_id}
			</when>			
			<when test="brd_id == 1130">
				= #{brd_id}
			</when>			
			<when test="brd_id == 1140">
				= #{brd_id}
			</when>			
			<when test="brd_id == 1150">
				= #{brd_id}
			</when>			
		</choose>
		and isdelete = 0
	</select> 
	
	<select id="JHJoinApply" parameterType="Article" statementType="CALLABLE">
		{
			CALL APPLY_INSERT(
				#{art_id, 		mode=IN,  jdbcType=INTEGER},
				#{brd_id, 		mode=IN,  jdbcType=INTEGER},
				#{mem_id, 		mode=IN,  jdbcType=INTEGER}
			)
		}
	</select>
	
	<select id="JHapplyCancel" parameterType="Article" resultType="Article" >
		DELETE FROM waiting WHERE trd_id = #{trd_id} and mem_id = #{mem_id}
	</select>
	
	<select id="JHJoinCancel" parameterType="Article" resultType="Article" >
		DELETE FROM join WHERE trd_id = #{trd_id} and mem_id = #{mem_id}
	</select>
	
	<select id="JHJoinList" parameterType="Article" resultType="Article" >
		SELECT m.mem_image, m.mem_username, m.mem_nickname, m.mem_id, j.join_date
		FROM member m
		LEFT JOIN join j
		ON j.mem_id = m.mem_id
		WHERE j.trd_id = #{trd_id}
		ORDER BY j.join_date asc
	</select>
	
	<select id="JHWaitList" parameterType="Article" resultType="Article" >
		SELECT m.mem_image, m.mem_username, m.mem_nickname, w.wait_date, m.mem_id
		FROM member m
		LEFT JOIN waiting w
		ON w.mem_id = m.mem_id
		WHERE w.trd_id = #{trd_id}
		ORDER BY wait_date asc
	</select>
	
	<select id="JHJoinListYN" parameterType="Article" resultType="int" >
		SELECT count(*)
		FROM join j
		WHERE j.trd_id = #{trd_id}
		AND j.mem_id = #{mem_id}
	</select>
	
	<select id="JHWaitListYN" parameterType="Article" resultType="int" >
		SELECT count(*)
		FROM waiting w
		WHERE w.trd_id = #{trd_id}
		AND w.mem_id = #{mem_id}
	</select>
	
	<delete id="JHJoinDeny" parameterType="Article" >
		DELETE FROM waiting WHERE trd_id = #{trd_id} and mem_id = #{mem_id}
	</delete>
	
	<select id="JHJoinAccept" parameterType="Article" statementType="CALLABLE">
		{
			CALL WAITINGTOJOIN(
				#{trd_id, 		mode=IN,  jdbcType=INTEGER},
				#{mem_id, 		mode=IN,  jdbcType=INTEGER}
			)
		}
	</select>
	
	<select id="JHPayStatusPro" parameterType="Article" resultType="Article">
		UPDATE trade 
		SET trd_status = #{comm_id} 
		WHERE trd_id = #{trd_id}
	</select>
	
	<select id="JHPayCompleted" parameterType="int" resultType="Article">
		UPDATE trade 
		SET trd_status = 403
		WHERE trd_id = #{trd_id}
	</select>
	
	<select id="JHReportInsert" parameterType="Article" statementType="CALLABLE">
		 {
			CALL REPORT_INSERT (
				#{art_id, 			mode=IN,  jdbcType=NUMERIC},
				#{brd_id, 			mode=IN,  jdbcType=NUMERIC},
				#{report_id, 		mode=IN,  jdbcType=NUMERIC},
				#{mem_id,	 		mode=IN,  jdbcType=NUMERIC},
				#{report_content, 	mode=IN,  jdbcType=VARCHAR}
			)
		}
	</select>
	
	<insert id="JHFavoriteInsert" parameterType="Article">
		INSERT INTO favorite(brd_id,art_id,mem_id)
		VALUES (#{brd_id},#{art_id},#{mem_id})
	</insert>
	
	<select id="JHFavoriteInsertYN" parameterType="Article" resultType="int" >
		SELECT count(*)
		FROM favorite	
		WHERE brd_id = #{brd_id}
		AND   art_id = #{art_id}
		AND   mem_id = #{mem_id}
	</select>
	
	<update id="JHReplyUpdate" parameterType="Article">
		UPDATE reply
		SET rep_content = #{rep_content}
		where brd_id = #{brd_id}
		and art_id = #{art_id}
		and rep_id = #{rep_id}
	</update>
	
	<select id="JHArticleSearch" parameterType="Article" resultType="Article">
		SELECT * 
		FROM article 
		WHERE art_title LIKE '%' || #{keyWord} || '%'
		ORDER BY art_regdate
	</select>
	
	<update id="JHArtGood" parameterType="Article">
		UPDATE article
		SET art_good = art_good+1
		WHERE brd_id = #{brd_id}	
		AND art_id = #{art_id}
	</update>
	
	<update id="JHArtBad" parameterType="Article">
		UPDATE article
		SET art_bad = art_bad+1
		WHERE brd_id = #{brd_id}	
		AND art_id = #{art_id}
	</update>
	
	<update id="JHRepGood" parameterType="Article">
		UPDATE reply
		SET rep_good = rep_good+1
		WHERE brd_id = #{brd_id}
		AND art_id = #{art_id}
		AND rep_id = #{rep_id}
	</update>
	
	<update id="JHRepBad" parameterType="Article">
		UPDATE reply
		SET rep_bad = rep_bad+1
		WHERE brd_id = #{brd_id}
		AND art_id = #{art_id}
		AND rep_id = #{rep_id}
	</update>
	
</mapper>